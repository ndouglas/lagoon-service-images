apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: lagoon-openshift-template-mariadb-backup
parameters:
  - name: SERVICE_NAME
    description: Name of this service
    required: true
  - name: SAFE_BRANCH
    description: Which branch this belongs to, special chars replaced with dashes
    required: true
  - name: SAFE_PROJECT
    description: Which project this belongs to, special chars replaced with dashes
    required: true
  - name: BRANCH
    description: Which branch this belongs to, original value
    required: true
  - name: PROJECT
    description: Which project this belongs to, original value
    required: true
  - name: LAGOON_GIT_SHA
    description: git hash sha of the current deployment
    required: true
  - name: SERVICE_ROUTER_URL
    description: URL of the Router for this service
    value: ""
  - name: OPENSHIFT_PROJECT
    description: Name of the Project that this service is in
    required: true
  - name: REGISTRY
    description: Registry where Images are pushed to
    required: true
  - name: RANDOM_MINUTE
    generate: expression
    from: "[0-5]{1}[0-9]{1}"
  - name: SERVICE_IMAGE
    description: Pullable image of service
    required: true
objects:
- apiVersion: batch/v1beta1
  kind: CronJob
  metadata:
    name: cronjob-${SERVICE_NAME}-backup
  spec:
    schedule: "${RANDOM_MINUTE} 1 * * *"
    concurrencyPolicy: Forbid
    successfulJobsHistoryLimit: 1
    failedJobsHistoryLimit: 1
    jobTemplate:
      spec:
        template:
          metadata:
            annotations:
              alpha.image.policy.openshift.io/resolve-names: "*"
            labels:
              cronjob: backup
              branch: ${SAFE_BRANCH}
              project: ${SAFE_PROJECT}
              parent: cronjob-${SERVICE_NAME}-backup
          spec:
            volumes:
              - name: ${SERVICE_NAME}-data
                persistentVolumeClaim:
                  claimName: ${SERVICE_NAME}-data
            containers:
            - name: cronjob-${SERVICE_NAME}-backup
              image: ${SERVICE_IMAGE}
              command:
                - /lagoon/cronjob.sh
                - "/lagoon/mysql-backup.sh ${SERVICE_NAME}"
              env:
              - name: SERVICE_NAME
                value: ${SERVICE_NAME}
              envFrom:
              - configMapRef:
                  name: lagoon-env
              volumeMounts:
                - name: ${SERVICE_NAME}-data
                  mountPath: /var/lib/mysql
            restartPolicy: OnFailure