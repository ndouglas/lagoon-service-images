apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: lagoon-openshift-template-mariadb-galera
parameters:
  - name: SERVICE_NAME
    description: Name of this service
    required: true
  - name: SAFE_BRANCH
    description: Which branch this belongs to, special chars replaced with dashes
    required: true
  - name: SAFE_PROJECT
    description: Which project this belongs to, special chars replaced with dashes
    required: true
  - name: BRANCH
    description: Which branch this belongs to, original value
    required: true
  - name: PROJECT
    description: Which project this belongs to, original value
    required: true
  - name: LAGOON_GIT_SHA
    description: git hash sha of the current deployment
    required: true
  - name: SERVICE_ROUTER_URL
    description: URL of the Router for this service
    value: ""
  - name: OPENSHIFT_PROJECT
    description: Name of the Project that this service is in
    required: true
  - name: REGISTRY
    description: Registry where Images are pushed to
    required: true
objects:
- apiVersion: apps/v1beta1
  kind: StatefulSet
  metadata:
    name: mariadb
  spec:
    serviceName: "mariadb"
    replicas: 3
    selector:
      matchLabels:
        service: mariadb
    template:
      metadata:
        labels:
          branch: ${SAFE_BRANCH}
          project: ${SAFE_PROJECT}
          service: mariadb
        annotations:
          alpha.image.policy.openshift.io/resolve-names: "*"
      spec:
        containers:
        - name: mariadb
          image: ${REGISTRY}/${OPENSHIFT_PROJECT}/mariadb-galera:latest
          imagePullPolicy: Always
          ports:
          - containerPort: 3306
            name: mysql
          - containerPort: 4444
            name: sst
          - containerPort: 4567
            name: replication
          - containerPort: 4568
            name: ist
          readinessProbe:
            exec:
              command:
              - /usr/share/container-scripts/mysql/readiness-probe.sh
            initialDelaySeconds: 15
            timeoutSeconds: 5
          volumeMounts:
          - name: ${SERVICE_NAME}-data
            mountPath: /var/lib/mysql
            subPath: data
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
    volumeClaimTemplates:
    - metadata:
        name: ${SERVICE_NAME}-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
